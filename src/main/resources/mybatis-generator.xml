<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--加载配置文件，为下面读取数据库信息准备-->
    <properties resource="application-dev.properties"/>

    <!--targetRuntime: MyBatis3Simple(类似MyBatis3，只是不生成XXXByExample)  MyBatis3 -->
    <context id="Mysql" targetRuntime="MyBatis3" defaultModelType="flat">

        <!--<plugin type="tk.mybatis.mapper.generator.MapperPlugin">-->
            <!--<property name="mappers" value="tk.mybatis.mapper.common.Mapper,tk.mybatis.mapper.common.MySqlMapper" />-->
            <!--&lt;!&ndash;caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true&ndash;&gt;-->
            <!--<property name="caseSensitive" value="true"/>-->
        <!--</plugin>-->

        <!-- 数据库关键字冲突,自动处理 -->
        <property name="autoDelimitKeywords" value="true"/>
        <!-- 用反引号`包裹,默认是双引号" -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- 阻止生成自动注释 -->
        <commentGenerator>
            <property name="javaFileEncoding" value="UTF-8"/>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--数据库链接地址账号密码-->
        <!--<jdbcConnection driverClass="${spring.datasource.driver-class-name}"-->
                        <!--connectionURL="${spring.datasource.url}"-->
                        <!--userId="${spring.datasource.username}"-->
                        <!--password="${spring.datasource.password}">-->
        <!--</jdbcConnection>-->

        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/test"
                        userId="root"
                        password="">
        </jdbcConnection>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!--生成Model类存放位置-->
        <javaModelGenerator targetPackage="com.example.springbootdemo.model" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--生成映射文件存放位置-->
        <sqlMapGenerator targetPackage="mappers" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!--生成Dao类存放位置-->
        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
                type="MIXEDMAPPER" 混合配置
        -->
        <javaClientGenerator type="ANNOTATEDMAPPER" targetPackage="com.example.springbootdemo.dao" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--生成对应表及类名
        去掉Mybatis Generator生成的一堆 example
        -->
        <!-- table tableName="t_user" domainObjectName="User" delimitIdentifiers="true" 表名用引号扩起来-->
        <table tableName="t_user" domainObjectName="User">
            <!-- true:使用数据库中实际的字段名字作为生成的实体类的属性名 false:将数据库中实际的字段名字转换为Camel Case风格-->
            <property name="useActualColumnNames" value="false" />
        </table>
    </context>
</generatorConfiguration>
